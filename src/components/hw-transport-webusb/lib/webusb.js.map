{"version":3,"sources":["../src/webusb.js"],"names":["requestLedgerDevice","ledgerDevices","vendorId","Promise","resolve","then","navigator","usb","requestDevice","filters","isSupported","getLedgerDevices","getDevices","devices","filter","d"],"mappings":";;;;;;;;;QAKgBA,mB,GAAAA,mB;;AAJhB;;AAEA,IAAMC,gBAAgB,CAAC,EAAEC,oCAAF,EAAD,CAAtB;;AAEO,SAASF,mBAAT,GAAmD;AACxD,SAAOG,QAAQC,OAAR,GAAkBC,IAAlB,CAAuB;AAAA;AAC5B;AACAC,gBAAUC,GAAV,CAAcC,aAAd,CAA4B,EAAEC,SAASR,aAAX,EAA5B;AAF4B;AAAA,GAAvB,CAAP;AAID;;AAEM,IAAMS,oCAAc,SAAdA,WAAc;AAAA,SACzBP,QAAQC,OAAR,CACE,QAAOE,SAAP,yCAAOA,SAAP,OAAqB,QAArB;AACE;AACA,UAAOA,UAAUC,GAAjB,MAAyB,QAH7B,CADyB;AAAA,CAApB;;AAOA,IAAMI,8CAAmB,SAAnBA,gBAAmB;AAAA,SAC9BR,QAAQC,OAAR,GACGC,IADH,CACQ;AAAA;AACJ;AACAC,gBAAUC,GAAV,CAAcK,UAAd;AAFI;AAAA,GADR,EAKGP,IALH,CAKQ;AAAA,WAAWQ,QAAQC,MAAR,CAAe;AAAA,aAAKC,EAAEb,QAAF,+BAAL;AAAA,KAAf,CAAX;AAAA,GALR,CAD8B;AAAA,CAAzB","file":"webusb.js","sourcesContent":["// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport function requestLedgerDevice(): Promise<USBDevice> {\n  return Promise.resolve().then(() =>\n    // $FlowFixMe\n    navigator.usb.requestDevice({ filters: ledgerDevices })\n  );\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    typeof navigator === \"object\" &&\n      // $FlowFixMe\n      typeof navigator.usb === \"object\"\n  );\n\nexport const getLedgerDevices = (): Promise<USBDevice[]> =>\n  Promise.resolve()\n    .then(() =>\n      // $FlowFixMe\n      navigator.usb.getDevices()\n    )\n    .then(devices => devices.filter(d => d.vendorId === ledgerUSBVendorId));\n"]}